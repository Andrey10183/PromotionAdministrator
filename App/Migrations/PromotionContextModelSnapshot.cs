// <auto-generated />
using System;
using Comandante.App;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Comandante.App.Migrations
{
    [DbContext(typeof(PromotionContext))]
    partial class PromotionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Comandante.App.Bank", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Comandante.App.CalendarDayOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Calendar__3214EC0736B12243");

                    b.ToTable("CalendarDayOfWeek", (string)null);
                });

            modelBuilder.Entity("Comandante.App.CalendarTimeOfDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeekId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionCalendarId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeStart")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("PromotionCalendarId");

                    b.HasIndex(new[] { "DayOfWeekId" }, "IX_CalendarTimeOfDay")
                        .IsUnique();

                    b.ToTable("CalendarTimeOfDay", (string)null);
                });

            modelBuilder.Entity("Comandante.App.Dbclone", b =>
                {
                    b.Property<int?>("CurrentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DbIdent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShopCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("DBClone", (string)null);
                });

            modelBuilder.Entity("Comandante.App.Object", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ObjectParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObjectValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ObjectId");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("Comandante.App.Param", b =>
                {
                    b.Property<string>("ParamKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParamValue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ParamKey");

                    b.ToTable("Params");
                });

            modelBuilder.Entity("Comandante.App.PromotionActiveList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PromotionKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PromotionActiveList", (string)null);
                });

            modelBuilder.Entity("Comandante.App.PromotionCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Calendar__3214EC071DE57479");

                    b.HasIndex(new[] { "PromotionId" }, "IX_CalendarDayOfWeek");

                    b.ToTable("PromotionCalendar", (string)null);
                });

            modelBuilder.Entity("Comandante.App.PromotionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("Ident")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PromotionReport", (string)null);
                });

            modelBuilder.Entity("Comandante.App.PromotionReportApplPromo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("Ident")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PromotionDescription")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte?>("PromotionMechanismType")
                        .HasColumnType("tinyint");

                    b.Property<string>("PromotionValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ReportDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PromotionReportApplPromos");
                });

            modelBuilder.Entity("Comandante.App.PromotionReportDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BonusAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("GoodId")
                        .HasColumnType("int");

                    b.Property<Guid?>("Ident")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("NewBonusAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("NewPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentGoodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("PromotionReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PromotionReportDetails");
                });

            modelBuilder.Entity("Comandante.App.PromotionReportTransaction", b =>
                {
                    b.Property<int?>("BasketNumber")
                        .HasColumnType("int");

                    b.Property<string>("CalcType")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CascadeNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionId")
                        .HasColumnType("int");

                    b.Property<double?>("Cparam")
                        .HasColumnType("float")
                        .HasColumnName("CParam");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("EventParentId")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("Param")
                        .HasColumnType("float");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("PromotionName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PromotionTransactionName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PromotionTransactionType")
                        .HasColumnType("int");

                    b.Property<int?>("ReportDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable("PromotionReportTransaction", (string)null);
                });

            modelBuilder.Entity("Comandante.App.PromotionTimer2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Time")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PromotionTimer2", (string)null);
                });

            modelBuilder.Entity("Comandante.App.RemoteCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommandText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RemoteCommands", t =>
                        {
                            t.HasTrigger("RemoteCommandsAfterUpdate");

                            t.HasTrigger("RemoteCommandsForInsert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Comandante.App.TerminalUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TermIP");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdateGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TerminalUpdates");
                });

            modelBuilder.Entity("Comandante.App.YandexMapPolygon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("GeoJson")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GeoJSON");

                    b.HasKey("Id")
                        .HasName("PK__YandexMa__3214EC07509E2FD7");

                    b.ToTable("YandexMapPolygons");
                });

            modelBuilder.Entity("Comandante.App.YandexMapPolygonsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActionDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Text")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__YandexMa__3214EC070679C465");

                    b.ToTable("YandexMapPolygons_History", (string)null);
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.EventGroupDetailEf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatalogParamTypeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CatalogTypeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EventGroupId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FilterTypeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CatalogTypeId", "CatalogParamTypeId", "Value" }, "EveGproup");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "CatalogTypeId", "CatalogParamTypeId", "Value" }, "EveGproup"), 90);

                    b.HasIndex(new[] { "EventGroupId", "CatalogTypeId", "CatalogParamTypeId" }, "EventGroupDetails_CatParamId");

                    b.HasIndex(new[] { "Id" }, "EventGroupDetails_Id_indx");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "Id" }, "EventGroupDetails_Id_indx"), 90);

                    b.HasIndex(new[] { "CatalogTypeId", "CatalogParamTypeId" }, "EventGroupDetails_cat_indx");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "CatalogTypeId", "CatalogParamTypeId" }, "EventGroupDetails_cat_indx"), 90);

                    b.HasIndex(new[] { "EventGroupId" }, "EventGroupDetails_indx");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "EventGroupId" }, "EventGroupDetails_indx"), 90);

                    b.HasIndex(new[] { "EventGroupId", "CatalogTypeId", "CatalogParamTypeId" }, "EventGroupDetails_indx1");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "EventGroupId", "CatalogTypeId", "CatalogParamTypeId" }, "EventGroupDetails_indx1"), 90);

                    b.HasIndex(new[] { "EventGroupId" }, "NonClusteredIndex-20200719-153341");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "EventGroupId" }, "NonClusteredIndex-20200719-153341"), 90);

                    b.ToTable("EventGroupDetails");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.EventGroupEf", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EventGroups");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionActionEf", b =>
                {
                    b.Property<int>("PromotionActionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("_Description");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PromotionActionId");

                    b.ToTable("PromotionActions");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionConditionEf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<int>("CascadeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ChargeCparam")
                        .HasColumnType("numeric(20, 4)")
                        .HasColumnName("ChargeCParam");

                    b.Property<decimal>("ChargeParam")
                        .HasColumnType("numeric(20, 4)");

                    b.Property<decimal>("ChargeRparam")
                        .HasColumnType("numeric(20, 4)")
                        .HasColumnName("ChargeRParam");

                    b.Property<int>("ConditionLineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EventGroupId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("IsAccumulation")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("ParamChargeOff")
                        .HasColumnType("numeric(20, 4)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("TypeChargeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeChargeOffId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeCheckId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeTchargeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TypeTChargeId");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EventGroupId" }, "PromotionConditions_EventGroupId_indx");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "EventGroupId" }, "PromotionConditions_EventGroupId_indx"), 90);

                    b.HasIndex(new[] { "PromotionId", "Priority" }, "PromotionConditions_PromoId_Prior_indx");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "PromotionId", "Priority" }, "PromotionConditions_PromoId_Prior_indx"), 90);

                    b.ToTable("PromotionConditions");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionEf", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsLinked")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsOnCash")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsRepeated")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsTest")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("NextPromotion")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PaymentCompatibility")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("PromotionGroup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RemindTypeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("SeparateBySeller")
                        .HasColumnType("tinyint");

                    b.Property<string>("SortType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SpeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PromotionId")
                        .HasName("PK_Promotions2");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionExecutionEf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("DwFriday")
                        .HasColumnType("bit")
                        .HasColumnName("dwFriday");

                    b.Property<bool>("DwMonday")
                        .HasColumnType("bit")
                        .HasColumnName("dwMonday");

                    b.Property<bool>("DwSaturday")
                        .HasColumnType("bit")
                        .HasColumnName("dwSaturday");

                    b.Property<bool>("DwSunday")
                        .HasColumnType("bit")
                        .HasColumnName("dwSunday");

                    b.Property<bool>("DwThursday")
                        .HasColumnType("bit")
                        .HasColumnName("dwThursday");

                    b.Property<bool>("DwTuesday")
                        .HasColumnType("bit")
                        .HasColumnName("dwTuesday");

                    b.Property<bool>("DwWednesday")
                        .HasColumnType("bit")
                        .HasColumnName("dwWednesday");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int>("SalesChannelId")
                        .HasColumnType("int");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Promotio__3214EC075070F446");

                    b.HasIndex(new[] { "PromotionId" }, "PromotionExecutions_PromotionId_indx");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "PromotionId" }, "PromotionExecutions_PromotionId_indx"), 90);

                    b.ToTable("PromotionExecutions");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionGroupEf", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.ToTable("PromotionGroups");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionGroupsCompatibilityEf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ChangeDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CompatibilityType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<byte?>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<string>("PromotionGroupX")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PromotionGroupY")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PromotionGroupsCompatibilities");
                });

            modelBuilder.Entity("Comandante.App.CalendarTimeOfDay", b =>
                {
                    b.HasOne("Comandante.App.CalendarDayOfWeek", "DayOfWeek")
                        .WithOne("CalendarTimeOfDay")
                        .HasForeignKey("Comandante.App.CalendarTimeOfDay", "DayOfWeekId")
                        .IsRequired()
                        .HasConstraintName("FK_CalendarTimeOfDay_CalendarDayOfWeek");

                    b.HasOne("Comandante.App.PromotionCalendar", "PromotionCalendar")
                        .WithMany("CalendarTimeOfDays")
                        .HasForeignKey("PromotionCalendarId")
                        .HasConstraintName("FK_CalendarTimeOfDay_PromotionCalendar");

                    b.Navigation("DayOfWeek");

                    b.Navigation("PromotionCalendar");
                });

            modelBuilder.Entity("Comandante.App.PromotionCalendar", b =>
                {
                    b.HasOne("Comandante.Persistance.Models.PromotionModelsEf.PromotionEf", "Promotion")
                        .WithMany("PromotionCalendars")
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("FK_CalendarDayOfWeek_Promotions");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionExecutionEf", b =>
                {
                    b.HasOne("Comandante.Persistance.Models.PromotionModelsEf.PromotionEf", "Promotion")
                        .WithMany("PromotionExecutions")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PromotionExecutions_Promotions");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Comandante.App.CalendarDayOfWeek", b =>
                {
                    b.Navigation("CalendarTimeOfDay");
                });

            modelBuilder.Entity("Comandante.App.PromotionCalendar", b =>
                {
                    b.Navigation("CalendarTimeOfDays");
                });

            modelBuilder.Entity("Comandante.Persistance.Models.PromotionModelsEf.PromotionEf", b =>
                {
                    b.Navigation("PromotionCalendars");

                    b.Navigation("PromotionExecutions");
                });
#pragma warning restore 612, 618
        }
    }
}
